// <auto-generated />
using System;
using HLSMP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HLSMP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519070106_MigUpdateLoginModel")]
    partial class MigUpdateLoginModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HLSMP.Models.DisMa", b =>
                {
                    b.Property<string>("CdisCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CDIS_CODE");

                    b.Property<string>("DisCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("DIS_CODE")
                        .IsFixedLength();

                    b.Property<string>("DisName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DIS_NAME");

                    b.Property<string>("DisNamh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DIS_NAMH");

                    b.Property<string>("DivCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("DIV_CODE")
                        .IsFixedLength();

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date");

                    b.Property<string>("InsertUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("insert_user");

                    b.Property<string>("StaCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("STA_CODE")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("update_user");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.ToTable("DIS_MAS");
                });

            modelBuilder.Entity("HLSMP.Models.LoginDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoginDetails");
                });

            modelBuilder.Entity("HLSMP.Models.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("HLSMP.Models.TblReasonMa", b =>
                {
                    b.Property<int>("ReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReasonId"));

                    b.Property<string>("Reason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReasonId");

                    b.ToTable("TblReason_MAS");
                });

            modelBuilder.Entity("HLSMP.Models.TblRoleMa", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("TblRole_MAS");
                });

            modelBuilder.Entity("HLSMP.Models.TblUser", b =>
                {
                    b.Property<int?>("DisCode")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.ToTable("TblUser");
                });

            modelBuilder.Entity("HLSMP.Models.TblUserMa", b =>
                {
                    b.Property<int?>("DisCode")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("RoleId");

                    b.ToTable("TblUser_MAS");
                });

            modelBuilder.Entity("HLSMP.Models.TehMasLgdUpdated", b =>
                {
                    b.Property<string>("CtehCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("CTEH_CODE");

                    b.Property<string>("DisCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("DIS_CODE")
                        .IsFixedLength();

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("insert_date");

                    b.Property<string>("InsertUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("insert_user");

                    b.Property<string>("LgdCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LGD_CODE");

                    b.Property<string>("PtehCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("PTEH_CODE")
                        .IsFixedLength();

                    b.Property<string>("SdoCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("SDO_CODE")
                        .IsFixedLength();

                    b.Property<string>("TcodeOld")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("TCODE_OLD");

                    b.Property<string>("TehCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("TEH_CODE")
                        .IsFixedLength();

                    b.Property<string>("TehName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("TEH_NAME");

                    b.Property<string>("TehNamh")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("TEH_NAMH");

                    b.Property<string>("TehType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TEH_TYPE");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("update_date");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("update_user");

                    b.ToTable("TEH_MAS_LGD_UPDATED");
                });

            modelBuilder.Entity("HLSMP.Models.VilMa", b =>
                {
                    b.Property<string>("VilCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("VIL_CODE");

                    b.Property<string>("BlkCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("BLK_CODE");

                    b.Property<string>("CensusVcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CENSUS_VCODE");

                    b.Property<string>("ConCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CON_CODE");

                    b.Property<string>("DisCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("DIS_CODE");

                    b.Property<string>("DivCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("DIV_CODE");

                    b.Property<string>("HbtNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("HBT_NO");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Insert_date");

                    b.Property<string>("InsertUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("insert_user");

                    b.Property<string>("McCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("MC_CODE");

                    b.Property<string>("MergedInTw")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("MERGED_IN_TW");

                    b.Property<string>("PconCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("PCON_CODE");

                    b.Property<string>("RuralUrban")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("RURAL_URBAN");

                    b.Property<string>("SdoCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("SDO_CODE");

                    b.Property<string>("StaCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("STA_CODE");

                    b.Property<string>("TehCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("TEH_CODE");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("update_user");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("VilName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VIL_NAME");

                    b.Property<string>("VilNamh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VIL_NAMH");

                    b.Property<string>("VillType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("VILL_TYPE");

                    b.HasKey("VilCode");

                    b.ToTable("VIL_MAS");
                });

            modelBuilder.Entity("HLSMP.Models.TblUserMa", b =>
                {
                    b.HasOne("HLSMP.Models.TblRoleMa", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_TblUser_MAS_TblRole_MAS");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
